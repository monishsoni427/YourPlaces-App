{"version":3,"sources":["shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","user/pages/Users.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","shared/context/auth-context.js","places/pages/NewPlace.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","places/pages/UpdatePlace.js","user/pages/Auth.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["Avatar","props","className","style","src","image","alt","width","height","Card","children","UserItem","to","id","name","placeCount","UsersList","items","length","map","user","key","places","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","message","useEffect","forEach","abortCtrl","abort","clearError","i","Users","loadedUsers","setIsLoadedUsers","users","fetchUsers","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","ImageUpload","file","sendFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","click","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","AuthContext","createContext","isLoggedIn","userId","login","logout","NewPlace","auth","useContext","title","description","address","InputHandler","history","useHistory","placeSubmitHandler","formData","FormData","append","Map","mapRef","zoom","window","google","maps","Marker","position","PlaceItem","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","onDelete","console","log","coordinates","creatorId","PlaceList","place","creator","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","fetchPlaces","deletedPlaceId","prevPlaces","UpdatePlace","loadedPlace","setLoadedPlace","placeId","inputHandler","setFormData","fetchPlace","placeUpdateSubmitHandler","JSON","stringify","Auth","isLoginMode","setIsLoginMode","email","password","authSubmitHandler","undefined","prevMode","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","App","routes","setIsLoggedIn","setUserId","uid","path","Provider","render"],"mappings":"wlBAgBeA,G,MAZA,SAACC,GACd,OACE,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACxD,yBACEC,IAAKH,EAAMI,MACXC,IAAKL,EAAMK,IACXH,MAAO,CAAEI,MAAON,EAAMM,MAAOC,OAAQP,EAAMM,YCEpCE,G,YARF,SAACR,GACZ,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMS,YCqBEC,EAvBE,SAACV,GAChB,OACE,wBAAIC,UAAU,aACZ,kBAAC,EAAI,CAACA,UAAU,sBACd,kBAAC,IAAI,CAACU,GAAE,WAAMX,EAAMY,GAAE,YACpB,yBAAKX,UAAU,oBACb,kBAAC,EAAM,CACLG,MAAK,qCAAgCJ,EAAMI,OAC3CC,IAAKL,EAAMa,QAGf,yBAAKZ,UAAU,mBACb,4BAAKD,EAAMa,MACX,4BACGb,EAAMc,WAAW,IAAuB,IAArBd,EAAMc,WAAmB,QAAU,eCUtDC,G,MAzBG,SAACf,GACjB,OAA2B,IAAvBA,EAAMgB,MAAMC,OAEZ,yBAAKhB,UAAU,UACb,kBAAC,EAAI,KACH,4BAAI,qBAOV,wBAAIA,UAAU,cACXD,EAAMgB,MAAME,KAAI,SAACC,GAAI,OACpB,kBAAC,EAAQ,CACPC,IAAKD,EAAKP,GACVA,GAAIO,EAAKP,GACTR,MAAOe,EAAKf,MACZS,KAAMM,EAAKN,KACXC,WAAYK,EAAKE,OAAOJ,e,QCXnBK,G,MAPE,SAACtB,GAChB,OAAOuB,IAASC,aACd,yBAAKvB,UAAU,WAAWwB,QAASzB,EAAMyB,UACzCC,SAASC,eAAe,oBCDtBC,G,MAAe,SAAC5B,GACpB,IAAM6B,EACJ,yBAAK5B,UAAS,gBAAWD,EAAMC,WAAaC,MAAOF,EAAME,OACvD,4BAAQD,UAAS,wBAAmBD,EAAM8B,cACxC,4BAAK9B,EAAM+B,SAEb,0BACEC,SACEhC,EAAMgC,SAAWhC,EAAMgC,SAAW,SAACC,GAAK,OAAKA,EAAMC,mBAGrD,yBAAKjC,UAAS,yBAAoBD,EAAMmC,eACrCnC,EAAMS,UAET,4BAAQR,UAAS,wBAAmBD,EAAMoC,cACvCpC,EAAMqC,UAKf,OAAOd,IAASC,aAAaK,EAASH,SAASC,eAAe,iBAoBjDW,EAjBD,SAACtC,GACb,OACE,kBAAC,IAAMuC,SAAQ,KACZvC,EAAMwC,MAAQ,kBAAC,EAAQ,CAACf,QAASzB,EAAMyC,WACxC,kBAACC,EAAA,EAAa,CACZC,GAAI3C,EAAMwC,KACVI,cAAY,EACZC,eAAa,EACbC,QAAS,IACTC,WAAW,SAEX,kBAAC,EAAiB/C,MCIXgD,G,MAxCA,SAAChD,GACd,OAAIA,EAAMiD,KAEN,uBACEhD,UAAS,yBAAoBD,EAAMkD,MAAQ,UAAS,YAClDlD,EAAMmD,SAAW,kBAAiB,YAChCnD,EAAMoD,QAAU,kBACpBH,KAAMjD,EAAMiD,MAEXjD,EAAMS,UAITT,EAAMW,GAEN,kBAAC,IAAI,CACHA,GAAIX,EAAMW,GACV0C,MAAOrD,EAAMqD,MACbpD,UAAS,yBAAoBD,EAAMkD,MAAQ,UAAS,YAClDlD,EAAMmD,SAAW,kBAAiB,YAChCnD,EAAMoD,QAAU,mBAEnBpD,EAAMS,UAKX,4BACER,UAAS,yBAAoBD,EAAMkD,MAAQ,UAAS,YAClDlD,EAAMmD,SAAW,kBAAiB,YAChCnD,EAAMoD,QAAU,kBACpBE,KAAMtD,EAAMsD,KACZ7B,QAASzB,EAAMyB,QACf8B,SAAUvD,EAAMuD,UAEfvD,EAAMS,YCtBE+C,EAbI,SAACxD,GAClB,OACE,kBAAC,EAAK,CACJyC,SAAUzC,EAAMyD,QAChB1B,OAAO,qBACPS,OAAQxC,EAAM0D,MACdrB,OAAQ,kBAAC,EAAM,CAACZ,QAASzB,EAAMyD,SAAS,SAExC,2BAAIzD,EAAM0D,SCDDC,G,MARQ,SAAC3D,GACtB,OACE,yBAAKC,UAAS,UAAKD,EAAM4D,WAAa,6BACpC,yBAAK3D,UAAU,qB,aCNrB,06MAAO,IAAM4D,EAAgB,WAC3B,MAAkCC,oBAAS,GAAM,mBAA1CC,EAAS,KAAEC,EAAY,KAC9B,EAA0BF,qBAAU,mBAA7BJ,EAAK,KAAEO,EAAQ,KAEhBC,EAAqBC,iBAAO,IAE5BC,EAAcC,sBAAW,uCAC7B,WAAOC,GAAG,6FAGuC,OAHrCC,EAAM,+BAAG,MAAOC,EAAI,+BAAG,KAAMC,EAAO,+BAAG,GACjDT,GAAa,GACPU,EAAgB,IAAIC,gBAC1BT,EAAmBU,QAAQC,KAAKH,GAAe,kBAGtBI,MAAMR,EAAK,CAChCC,OAAQA,EACRC,OACAC,UACAM,OAAQL,EAAcK,SACrB,KAAD,EALY,OAARC,EAAQ,iBAOaA,EAASC,OAAO,KAAD,GAUtB,OAVdC,EAAY,OAElBhB,EAAmBU,QAAUV,EAAmBU,QAAQO,QACtD,SAACC,GAAO,OAAKA,IAAYV,KAO3BV,GAAa,GAAO,kBACbkB,GAAY,QAGC,MAHD,0BAEnBjB,EAAS,KAAIoB,SACbrB,GAAa,GAAO,+DAGvB,mDA/B4B,GAgC7B,IAcF,OAPAsB,qBAAU,WACR,OAAO,WAELpB,EAAmBU,QAAQW,SAAQ,SAACC,GAAS,OAAKA,EAAUC,cAE7D,IAEI,CAAE1B,YAAWL,QAAOU,cAAasB,WAXrB,WACjBzB,EAAS,S,aC1Cb,kmGAAA0B,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAIA,IA6BeC,EA7BD,WACZ,MAAsD/B,IAA9CE,EAAS,EAATA,UAAWL,EAAK,EAALA,MAAOU,EAAW,EAAXA,YAAasB,EAAU,EAAVA,WACvC,EAAwC5B,qBAAU,mBAA3C+B,EAAW,KAAEC,EAAgB,KAcpC,OAbAR,qBAAU,YACQ,uCAAG,6GAEYlB,EACzB,wCACA,OACA,KAAD,EAHKc,EAAY,OAIlBY,EAAiBZ,EAAaa,OAAO,uGAExC,kBARe,mCAShBC,KACC,CAAC5B,IAGF,kBAAC,IAAM7B,SAAQ,KACb,kBAAC,EAAU,CAACmB,MAAOA,EAAOD,QAASiC,IAClC3B,GACC,yBAAK9D,UAAU,UACb,kBAAC,EAAc,QAGjB8D,GAAa8B,GAAe,kBAAC,EAAS,CAAC7E,MAAO6E,IAAgB,M,uBCnBzDI,EAAsB,SAACC,GAAG,MAAM,CAC3C5C,KAV+B,YAW/B4C,IAAKA,IAUMC,EAAW,SAACC,EAAOC,GAC9B,IACkC,EAD9BC,GAAU,EAAK,cACKD,GAAU,IAAlC,2BAAoC,CAAC,IAA1BE,EAAS,QAxBS,YAyBvBA,EAAUjD,OACZgD,EAAUA,GAAWF,EAAMI,OAAOvF,OAAS,GAzBhB,cA2BzBsF,EAAUjD,OACZgD,EAAUA,GAAWF,EAAMI,OAAOvF,QAAUsF,EAAUL,KA3B3B,cA6BzBK,EAAUjD,OACZgD,EAAUA,GAAWF,EAAMI,OAAOvF,QAAUsF,EAAUL,KA7BjC,QA+BnBK,EAAUjD,OACZgD,EAAUA,IAAYF,GAASG,EAAUL,KA/BpB,QAiCnBK,EAAUjD,OACZgD,EAAUA,IAAYF,GAASG,EAAUL,KAjClB,UAmCrBK,EAAUjD,OACZgD,EAAUA,GAAW,iBAAiBG,KAAKL,KAE9C,8BACD,OAAOE,GCxCHI,G,MAAe,SAACC,EAAOC,GAC3B,OAAQA,EAAOtD,MACb,IAAK,SACH,OAAO,2BACFqD,GAAK,IACRP,MAAOQ,EAAOV,IACdI,QAASH,EAASS,EAAOV,IAAKU,EAAOP,cAEzC,IAAK,QACH,OAAO,2BACFM,GAAK,IACRE,WAAW,IAIf,QACE,OAAOF,KAgEEG,EA5DD,SAAC9G,GACb,MAA+B+G,qBAAWL,EAAc,CACtDN,MAAOpG,EAAMgH,cAAgB,GAC7BH,WAAW,EACXP,QAAStG,EAAMiH,eAAgB,IAC/B,mBAJKC,EAAU,KAAEC,EAAQ,KAMnBvG,EAAgBZ,EAAhBY,GAAIwG,EAAYpH,EAAZoH,QACJhB,EAAmBc,EAAnBd,MAAOE,EAAYY,EAAZZ,QAEfhB,qBAAU,WACR8B,EAAQxG,EAAIwF,EAAOE,KAClB,CAAC1F,EAAIwF,EAAOE,EAASc,IAExB,IAAMC,EAAgB,SAACpF,GACrBkF,EAAS,CACP7D,KAAM,SACN4C,IAAKjE,EAAMqF,OAAOlB,MAClBC,WAAYrG,EAAMqG,cAIhBkB,EAAe,WACnBJ,EAAS,CACP7D,KAAM,WAIJkE,EACc,UAAlBxH,EAAMwH,QACJ,2BACE5G,GAAIZ,EAAMY,GACV0C,KAAMtD,EAAMsD,KACZmE,YAAazH,EAAMyH,YACnBC,SAAUL,EACVM,OAAQJ,EACRnB,MAAOc,EAAWd,QAGpB,8BACExF,GAAIZ,EAAMY,GACVgH,KAAM5H,EAAM4H,MAAQ,EACpBF,SAAUL,EACVM,OAAQJ,EACRnB,MAAOc,EAAWd,QAGxB,OACE,yBACEnG,UAAS,wBACNiH,EAAWZ,SAAWY,EAAWL,WAAa,0BAGjD,2BAAOgB,QAAS7H,EAAMY,IAAKZ,EAAM8H,OAChCN,GACCN,EAAWZ,SAAWY,EAAWL,WAAa,2BAAI7G,EAAM+H,aCjBjDC,G,MA3DK,SAAChI,GACnB,MAAyB8D,qBAAU,mBAA5BmE,EAAI,KAAEC,EAAQ,KACrB,EAAoCpE,qBAAU,mBAAvCqE,EAAU,KAAEC,EAAa,KAChC,EAA8BtE,oBAAS,GAAM,mBAAtCwC,EAAO,KAAE+B,EAAU,KACpBC,EAAgBnE,mBAEtBmB,qBAAU,WACR,GAAK2C,EAAL,CAGA,IAAMM,EAAa,IAAIC,WACvBD,EAAWE,OAAS,WAClBL,EAAcG,EAAWG,SAE3BH,EAAWI,cAAcV,MACxB,CAACA,IAoBJ,OACE,yBAAKhI,UAAU,gBACb,2BACEW,GAAIZ,EAAMY,GACVgI,IAAKN,EACLpI,MAAO,CAAE2I,QAAS,QAClBvF,KAAK,OACLwF,OAAO,kBACPpB,SA1BgB,SAACzF,GACrB,IAAI8G,EACAC,EAAc1C,EACdrE,EAAMqF,OAAO2B,OAAuC,IAA9BhH,EAAMqF,OAAO2B,MAAMhI,QAC3C8H,EAAa9G,EAAMqF,OAAO2B,MAAM,GAChCf,EAASa,GACTV,GAAW,GACXW,GAAc,IAEdX,GAAW,GACXW,GAAc,GAEhBhJ,EAAMoH,QAAQpH,EAAMY,GAAImI,EAAYC,MAgBlC,yBAAK/I,UAAS,uBAAkBD,EAAMkJ,QAAU,WAC9C,yBAAKjJ,UAAU,yBACZkI,GAAc,yBAAKhI,IAAKgI,EAAY9H,IAAI,aACvC8H,GAAc,2BAAG,6BAErB,kBAAC,EAAM,CAAC7E,KAAK,SAAS7B,QAlBH,WACvB6G,EAAc1D,QAAQuE,UAiB+B,gBAIjD7C,GAAW,2BAAItG,EAAM+H,c,QCvDvBqB,EAAc,SAACzC,EAAOC,GAC1B,OAAQA,EAAOtD,MACb,IAAK,eACH,IAAI+F,GAAc,EAClB,IAAK,IAAMC,KAAW3C,EAAM4C,OACrB5C,EAAM4C,OAAOD,KAIhBD,EADEC,IAAY1C,EAAO0C,QACPD,GAAezC,EAAON,QAEtB+C,GAAe1C,EAAM4C,OAAOD,GAAShD,SAGvD,OAAO,2BACFK,GAAK,IACR4C,OAAO,2BACF5C,EAAM4C,QAAM,kBACd3C,EAAO0C,QAAU,CAAElD,MAAOQ,EAAOR,MAAOE,QAASM,EAAON,WAE3DA,QAAS+C,IAGb,IAAK,WACH,MAAO,CACLE,OAAQ3C,EAAO2C,OACfjD,QAASM,EAAOyC,aAGpB,QACE,OAAO1C,IAIA6C,EAAU,SAACC,EAAeC,GACrC,MAA8B3C,qBAAWqC,EAAa,CACpDG,OAAQE,EACRnD,QAASoD,IACT,mBAHKC,EAAS,KAAExC,EAAQ,KAsB1B,MAAO,CAACwC,EAjBatF,uBAAY,SAACzD,EAAIwF,EAAOE,GAC3Ca,EAAS,CACP7D,KAAM,eACN8C,MAAOA,EACPE,QAASA,EACTgD,QAAS1I,MAEV,IAEiByD,uBAAY,SAACuF,EAAWC,GAC1C1C,EAAS,CACP7D,KAAM,WACNiG,OAAQK,EACRP,YAAaQ,MAEd,MCvDQC,EAAcC,wBAAc,CACvCC,YAAY,EACZC,OAAQ,KACRC,MAAO,aACPC,OAAQ,e,aCLV,kmGAAAxE,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAcA,IAsFeyE,EAtFE,WACf,IAAMC,EAAOC,qBAAWR,GACxB,EAAsDjG,IAA9CE,EAAS,EAATA,UAAWL,EAAK,EAALA,MAAOU,EAAW,EAAXA,YAAasB,EAAU,EAAVA,WACvC,EAAkC8D,EAChC,CACEe,MAAO,CACLnE,MAAO,GACPE,SAAS,GAEXkE,YAAa,CACXpE,MAAO,GACPE,SAAS,GAEXmE,QAAS,CACPrE,MAAO,GACPE,SAAS,GAEXlG,MAAO,CACLgG,MAAO,KACPE,SAAS,KAGb,GACD,mBApBMqD,EAAS,KAAEe,EAAY,KAqBxBC,EAAUC,cACVC,EAAkB,uCAAG,WAAO5I,GAAK,uEAQoB,OAPzDA,EAAMC,iBAAiB,UAEf4I,EAAW,IAAIC,UACZC,OAAO,QAASrB,EAAUJ,OAAOgB,MAAMnE,OAChD0E,EAASE,OAAO,cAAerB,EAAUJ,OAAOiB,YAAYpE,OAC5D0E,EAASE,OAAO,UAAWrB,EAAUJ,OAAOkB,QAAQrE,OACpD0E,EAASE,OAAO,UAAWX,EAAKJ,QAChCa,EAASE,OAAO,QAASrB,EAAUJ,OAAOnJ,MAAMgG,OAAO,UACjDhC,EACJ,yCACA,OACA0G,GACA,KAAD,GAEDH,EAAQ9F,KAAK,KAAK,4GAErB,gBAjBuB,sCAmBxB,OACE,kBAAC,IAAMtC,SAAQ,KACb,kBAAC,EAAU,CAACmB,MAAOA,EAAOD,QAASiC,IACnC,0BAAMzF,UAAU,aAAa+B,SAAU6I,GACpC9G,GAAa,kBAAC,EAAc,CAACH,WAAS,IACvC,kBAAC,EAAK,CACJhD,GAAG,QACH4G,QAAQ,QACRM,MAAM,QACNzB,WAAY,CL5DkB,CAAE/C,KARX,YKqErByE,UAAU,8BACVX,QAASsD,IAEX,kBAAC,EAAK,CACJ9J,GAAG,cACH4G,QAAQ,WACRM,MAAM,cACNzB,WAAY,CAACJ,EAAoB,IACjC8B,UAAU,2DACVX,QAASsD,IAEX,kBAAC,EAAK,CACJ9J,GAAG,UACH4G,QAAQ,QACRM,MAAM,UACNzB,WAAY,CL5EkB,CAAE/C,KARX,YKqFrByE,UAAU,gCACVX,QAASsD,IAEX,kBAAC,EAAW,CACV9J,GAAG,QACHwG,QAASsD,EACT3C,UAAU,6BAEZ,kBAAC,EAAM,CAACzE,KAAK,SAASC,UAAWoG,EAAUrD,SAAS,gBCpE7C2E,G,MAvBH,SAACjL,GACX,IAAMkL,EAAS/G,mBAEP+E,EAAiBlJ,EAAjBkJ,OAAQiC,EAASnL,EAATmL,KAWhB,OATA7F,qBAAU,WACR,IAAMpE,EAAM,IAAIkK,OAAOC,OAAOC,KAAKL,IAAIC,EAAOtG,QAAS,CACrDsE,OAAQA,EACRiC,KAAMA,IAGR,IAAIC,OAAOC,OAAOC,KAAKC,OAAO,CAAEC,SAAUtC,EAAQhI,IAAKA,MACtD,CAACgI,EAAQiC,IAGV,yBACEvC,IAAKsC,EACLjL,UAAS,cAASD,EAAMC,WACxBC,MAAOF,EAAME,U,mBCnBnB,06MAWA,IAqGeuL,EArGG,SAACzL,GACjB,MAAsD6D,IAA9CE,EAAS,EAATA,UAAWL,EAAK,EAALA,MAAOU,EAAW,EAAXA,YAAasB,EAAU,EAAVA,WACjC2E,EAAOC,qBAAWR,GACxB,EAA8BhG,oBAAS,GAAM,mBAAtC4H,EAAO,KAAEC,EAAU,KAC1B,EAAgD7H,oBAAS,GAAM,mBAAxD8H,EAAgB,KAAEC,EAAmB,KAItCC,EAAkB,WAAH,OAASH,GAAW,IAMnCI,EAAsB,WAC1BF,GAAoB,IAGhBG,EAAoB,uCAAG,8EACA,OAA3BH,GAAoB,GAAO,kBAEnBzH,EAAY,yCAAD,OAC0BpE,EAAMY,IAC/C,UACA,KAAD,EACDZ,EAAMiM,SAASjM,EAAMY,IAAI,gDAEzBsL,QAAQC,IAAI,EAAD,IAAM,yDAEpB,kBAXyB,mCAa1B,OACE,kBAAC,IAAM5J,SAAQ,KACb,kBAAC,EAAU,CAACmB,MAAOA,EAAOD,QAASiC,IACnC,kBAAC,EAAK,CACJlD,KAAMkJ,EACNjJ,SAAUqJ,EACV/J,OAAQ/B,EAAMyK,QACdtI,aAAa,4BACbC,YAAY,4BACZC,OAAQ,kBAAC,EAAM,CAACZ,QAASqK,GAAiB,UAE1C,yBAAK7L,UAAU,iBACb,kBAAC,EAAG,CAACiJ,OAAQlJ,EAAMoM,YAAajB,KAAM,OAG1C,kBAAC,EAAK,CACJ3I,KAAMoJ,EACNnJ,SAAUsJ,EACVhK,OAAO,gBACPK,YAAY,4BACZC,OACE,kBAAC,IAAME,SAAQ,KACb,kBAAC,EAAM,CAACY,SAAO,EAAC1B,QAASsK,GAAqB,UAG9C,kBAAC,EAAM,CAAC3I,QAAM,EAAC3B,QAASuK,GAAsB,YAMlD,2BAAG,kGAKL,wBAAI/L,UAAU,cACZ,kBAAC,EAAI,CAACA,UAAU,uBACb8D,GAAa,kBAAC,EAAc,CAACH,WAAS,IACvC,yBAAK3D,UAAU,qBACb,yBACEE,IAAG,qCAAgCH,EAAMI,OACzCC,IAAKL,EAAMuK,SAGf,yBAAKtK,UAAU,oBACb,4BAAKD,EAAMuK,OACX,4BAAKvK,EAAMyK,SACX,2BAAIzK,EAAMwK,cAEZ,yBAAKvK,UAAU,uBACb,kBAAC,EAAM,CAACkD,SAAO,EAAC1B,QA5EH,WAAH,OAASkK,GAAW,KA4EW,eAGxCtB,EAAKJ,SAAWjK,EAAMqM,WACrB,kBAAC,EAAM,CAAC1L,GAAE,kBAAaX,EAAMY,KAAM,QAGpCyJ,EAAKJ,SAAWjK,EAAMqM,WACrB,kBAAC,EAAM,CAACjJ,QAAM,EAAC3B,QAhFM,WAC/BoK,GAAoB,KA+EwC,eCpEjDS,G,MA7BG,SAACtM,GACjB,OAA2B,IAAvBA,EAAMgB,MAAMC,OAEZ,yBAAKhB,UAAU,qBACb,kBAAC,EAAI,KACH,4BAAI,qCACJ,kBAAC,EAAM,CAACU,GAAG,eAAc,iBAM/B,wBAAIV,UAAU,cACXD,EAAMgB,MAAME,KAAI,SAACqL,GAAK,OACrB,kBAAC,EAAS,CACRnL,IAAKmL,EAAM3L,GACXA,GAAI2L,EAAM3L,GACVR,MAAOmM,EAAMnM,MACbmK,MAAOgC,EAAMhC,MACbC,YAAa+B,EAAM/B,YACnBC,QAAS8B,EAAM9B,QACf4B,UAAWE,EAAMC,QACjBP,SAAUjM,EAAMyM,sB,aC1B1B,kmGAAA9G,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAOA,IAwCe+G,EAxCI,WACjB,MAAwC5I,qBAAU,mBAA3C6I,EAAY,KAAEC,EAAe,KACpC,EAAsD/I,IAA9CE,EAAS,EAATA,UAAWL,EAAK,EAALA,MAAOU,EAAW,EAAXA,YAAasB,EAAU,EAAVA,WAEjCuE,EAAS4C,cAAY5C,OAE3B3E,qBAAU,YACS,uCAAG,6GAEWlB,EAAY,8CAAD,OACU6F,GAC9C,OACA,KAAD,EAHK/E,EAAY,OAIlB0H,EAAgB1H,EAAa7D,QAAQ,uGAExC,kBARgB,mCASjByL,KACC,CAAC1I,EAAa6F,IAQjB,OACE,kBAAC,IAAM1H,SAAQ,KACb,kBAAC,EAAU,CAACmB,MAAOA,EAAOD,QAASiC,IAClC3B,GACC,yBAAK9D,UAAU,UACb,kBAAC,EAAc,QAGjB8D,GAAa4I,GACb,kBAAC,EAAS,CAAC3L,MAAO2L,EAAcF,cAfV,SAACM,GAC3BH,GAAgB,SAACI,GAAU,OACzBA,EAAW7H,QAAO,SAACoH,GAAK,OAAKA,EAAM3L,KAAOmM,a,aC5BhD,kmGAAApH,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAeA,IAqHesH,EArHK,WAClB,IAAM5C,EAAOC,qBAAWR,GACxB,EAAsDjG,IAA9CE,EAAS,EAATA,UAAWL,EAAK,EAALA,MAAOU,EAAW,EAAXA,YAAasB,EAAU,EAAVA,WACvC,EAAsC5B,qBAAU,mBAAzCoJ,EAAW,KAAEC,EAAc,KAE5BC,EAAUP,cAAYO,QACtBzC,EAAUC,cAChB,EAA+CpB,EAC7C,CACEe,MAAO,CACLnE,MAAO,GACPE,SAAS,GAEXkE,YAAa,CACXpE,MAAO,GACPE,SAAS,KAGb,GACD,mBAZMqD,EAAS,KAAE0D,EAAY,KAAEC,EAAW,KAc3ChI,qBAAU,YACQ,uCAAG,6GAEYlB,EAAY,yCAAD,OACKgJ,IACzC,KAAD,EAFKlI,EAAY,OAGlBiI,EAAejI,EAAaqH,OAC5Be,EACE,CACE/C,MAAO,CACLnE,MAAOlB,EAAaqH,MAAMhC,MAC1BjE,SAAS,GAEXkE,YAAa,CACXpE,MAAOlB,EAAaqH,MAAM/B,YAC1BlE,SAAS,KAGb,GACA,yGAEL,kBApBe,mCAqBhBiH,KACC,CAACnJ,EAAagJ,EAASE,IAE1B,IAAME,EAAwB,uCAAG,WAAOvL,GAAK,iEACpB,OAAvBA,EAAMC,iBAAiB,kBAEfkC,EAAY,yCAAD,OAC0BgJ,GACzC,QACAK,KAAKC,UAAU,CACbnD,MAAOZ,EAAUJ,OAAOgB,MAAMnE,MAC9BoE,YAAab,EAAUJ,OAAOiB,YAAYpE,QAE5C,CACE,eAAgB,qBAElB,KAAD,EACDuE,EAAQ9F,KAAK,IAAMwF,EAAKJ,OAAS,WAAW,uGAE/C,gBAhB6B,sCAkB9B,OAAIlG,EAEA,yBAAK9D,UAAU,UACb,kBAAC,EAAc,OAKhBiN,GAAgBxJ,EAWnB,kBAAC,IAAMnB,SAAQ,KACb,kBAAC,EAAU,CAACmB,MAAOA,EAAOD,QAASiC,KACjC3B,GAAamJ,GACb,0BAAMjN,UAAU,aAAa+B,SAAUwL,GACrC,kBAAC,EAAK,CACJ5M,GAAG,QACH4G,QAAQ,QACRlE,KAAK,OACLwE,MAAM,QACNzB,WAAY,CVpGgB,CAAE/C,KARX,YU6GnByE,UAAU,8BACVX,QAASiG,EACTrG,aAAckG,EAAY3C,MAC1BtD,cAAc,IAEhB,kBAAC,EAAK,CACJrG,GAAG,cACH4G,QAAQ,WACRM,MAAM,cACNzB,WAAY,CAACJ,EAAoB,IACjC8B,UAAU,wDACVX,QAASiG,EACTrG,aAAckG,EAAY1C,YAC1BvD,cAAc,IAEhB,kBAAC,EAAM,CAAC3D,KAAK,SAASC,UAAWoG,EAAUrD,SAAS,kBAlCxD,yBAAKrG,UAAU,UACb,kBAAC,EAAI,KACH,4BAAI,4B,mBC3Fd,06MAgBA,IA+Ie0N,EA/IF,WACX,IAAMtD,EAAOC,qBAAWR,GAExB,EAAsChG,oBAAS,GAAK,mBAA7C8J,EAAW,KAAEC,EAAc,KAClC,EAAsDhK,IAA9CE,EAAS,EAATA,UAAWL,EAAK,EAALA,MAAOU,EAAW,EAAXA,YAAasB,EAAU,EAAVA,WAEvC,EAA+C8D,EAC7C,CACEsE,MAAO,CACL1H,MAAO,GACPE,SAAS,GAEXyH,SAAU,CACR3H,MAAO,GACPE,SAAS,KAGb,GACD,mBAZMqD,EAAS,KAAE0D,EAAY,KAAEC,EAAW,KA2CrCU,EAAiB,uCAAG,WAAO/L,GAAK,2EACb,GAAvBA,EAAMC,kBAEF0L,EAAY,CAAD,yCAEgBxJ,EACzB,6CACA,OACAqJ,KAAKC,UAAU,CACbI,MAAOnE,EAAUJ,OAAOuE,MAAM1H,MAC9B2H,SAAUpE,EAAUJ,OAAOwE,SAAS3H,QAEtC,CACE,eAAgB,qBAElB,KAAD,EAVKlB,EAAY,OAWlBmF,EAAKH,MAAMhF,EAAa/D,KAAKP,IAAI,gFAQsB,OARtB,WAI3BkK,EAAW,IAAIC,UACZC,OAAO,QAASrB,EAAUJ,OAAOuE,MAAM1H,OAChD0E,EAASE,OAAO,OAAQrB,EAAUJ,OAAO1I,KAAKuF,OAC9C0E,EAASE,OAAO,WAAYrB,EAAUJ,OAAOwE,SAAS3H,OACtD0E,EAASE,OAAO,QAASrB,EAAUJ,OAAOnJ,MAAMgG,OAAO,UAE5BhC,EACzB,8CACA,OACA0G,GACA,KAAD,GAJK5F,EAAY,OAMlBmF,EAAKH,MAAMhF,EAAa/D,KAAKP,IAAI,oHAGtC,gBAnCsB,sCAqCvB,OACE,kBAAC,IAAM2B,SAAQ,KACb,kBAAC,EAAU,CAACmB,MAAOA,EAAOD,QAASiC,IACnC,kBAAC,EAAI,CAACzF,UAAU,kBACb8D,GAAa,kBAAC,EAAc,CAACH,WAAS,IACvC,4BAAMgK,EAAkC,iBAApB,mBACpB,6BACA,0BAAM5L,SAAUgM,IACZJ,GACA,kBAAC,EAAK,CACJpG,QAAQ,QACR5G,GAAG,OACH0C,KAAK,OACLwE,MAAM,YACNzB,WAAY,CX7Gc,CAAE/C,KARX,YWsHjByE,UAAU,uBACVX,QAASiG,KAGXO,GACA,kBAAC,EAAW,CACV1E,QAAM,EACNtI,GAAG,QACHwG,QAASiG,EACTtF,UAAU,6BAGd,kBAAC,EAAK,CACJP,QAAQ,QACR5G,GAAG,QACH0C,KAAK,QACLwE,MAAM,SACNzB,WAAY,CXnHc,CAAE/C,KAfX,UWmIjByE,UAAU,sCACVX,QAASiG,IAEX,kBAAC,EAAK,CACJ7F,QAAQ,QACR5G,GAAG,WACH0C,KAAK,WACLwE,MAAM,WACNzB,WAAY,CAACJ,EAAoB,IACjC8B,UAAU,wDACVX,QAASiG,IAEX,kBAAC,EAAM,CAAC/J,KAAK,SAASC,UAAWoG,EAAUrD,SACxCsH,EAAc,QAAU,WAG7B,kBAAC,EAAM,CAACzK,SAAO,EAAC1B,QAnHI,WACnBmM,EAUHN,EAAY,2BAEL3D,EAAUJ,QAAM,IACnB1I,KAAM,CACJuF,MAAO,GACPE,SAAS,GAEXlG,MAAO,CACLgG,MAAO,KACPE,SAAS,MAGb,GArBFgH,EAAY,2BAEL3D,EAAUJ,QAAM,IACnB1I,UAAMoN,EACN7N,WAAO6N,IAETtE,EAAUJ,OAAOuE,MAAMxH,SAAWqD,EAAUJ,OAAOwE,SAASzH,SAkBhEuH,GAAe,SAACK,GAAQ,OAAMA,OAyFkB,aAC/BN,EAAc,SAAW,YCjJ/BO,G,MAJI,SAACnO,GAClB,OAAO,4BAAQC,UAAU,eAAeD,EAAMS,YCiCjC2N,G,MAjCE,SAACpO,GAChB,IAAMqK,EAAOC,qBAAWR,GACxB,OACE,wBAAI7J,UAAU,aACZ,4BACE,kBAAC,IAAO,CAACU,GAAG,IAAI0C,OAAK,GAAC,cAIvBgH,EAAKL,YACJ,4BACE,kBAAC,IAAO,CAACrJ,GAAE,WAAM0J,EAAKJ,OAAM,YAAW,cAG1CI,EAAKL,YACJ,4BACE,kBAAC,IAAO,CAACrJ,GAAG,eAAc,eAG5B0J,EAAKL,YACL,4BACE,kBAAC,IAAO,CAACrJ,GAAG,SAAQ,iBAGvB0J,EAAKL,YACJ,4BACE,4BAAQvI,QAAS4I,EAAKF,QAAQ,cCRzBkE,G,MAlBI,SAACrO,GAClB,IAAM6B,EACJ,kBAACa,EAAA,EAAa,CACZC,GAAI3C,EAAMwC,KACVM,QAAS,IACTC,WAAW,gBACXH,cAAY,EACZC,eAAa,GAEb,2BAAO5C,UAAU,cAAcwB,QAASzB,EAAMyB,SAC3CzB,EAAMS,WAKb,OAAOc,IAASC,aAAaK,EAASH,SAASC,eAAe,kBC6BjD2M,G,MAxCQ,SAACtO,GACtB,MAAwC8D,oBAAS,GAAM,mBAAhDyK,EAAY,KAAEC,EAAe,KAM9BC,EAAqB,WACzBD,GAAgB,IAGlB,OACE,kBAAC,IAAMjM,SAAQ,KACZgM,GAAgB,kBAAC,EAAQ,CAAC9M,QAASgN,IACpC,kBAAC,EAAU,CAACjM,KAAM+L,EAAc9M,QAASgN,GACvC,yBAAKxO,UAAU,+BACb,kBAAC,EAAQ,QAIb,kBAAC,EAAU,KACT,4BACEA,UAAU,4BACVwB,QApBkB,WACxB+M,GAAgB,KAqBV,+BACA,+BACA,gCAEF,wBAAIvO,UAAU,0BACZ,kBAAC,IAAI,CAACU,GAAG,KAAI,eAEf,yBAAKV,UAAU,+BACb,kBAAC,EAAQ,WCyCJyO,EApEH,WACV,IAaIC,EAbJ,EAAoC7K,oBAAS,GAAM,mBAA5CkG,EAAU,KAAE4E,EAAa,KAChC,EAA4B9K,oBAAS,GAAM,mBAApCmG,EAAM,KAAE4E,EAAS,KAElB3E,EAAQ7F,uBAAY,SAACyK,GACzBF,GAAc,GACdC,EAAUC,KACT,IAEG3E,EAAS9F,uBAAY,WACzBuK,GAAc,GACdC,EAAU,QACT,IAuCH,OAlCEF,EADE3E,EAEA,kBAAC,IAAM,KACL,kBAAC,IAAK,CAAC+E,KAAK,IAAI1L,OAAK,GACnB,kBAAC,EAAK,OAER,kBAAC,IAAK,CAAC0L,KAAK,kBAAkB1L,OAAK,GACjC,kBAAC,EAAU,OAEb,kBAAC,IAAK,CAAC0L,KAAK,cAAc1L,OAAK,GAC7B,kBAAC,EAAQ,OAEX,kBAAC,IAAK,CAAC0L,KAAK,oBACV,kBAAC,EAAW,OAEd,kBAAC,IAAQ,CAACpO,GAAG,OAKf,kBAAC,IAAM,KACL,kBAAC,IAAK,CAACoO,KAAK,IAAI1L,OAAK,GACnB,kBAAC,EAAK,OAER,kBAAC,IAAK,CAAC0L,KAAK,kBAAkB1L,OAAK,GACjC,kBAAC,EAAU,OAEb,kBAAC,IAAK,CAAC0L,KAAK,SACV,kBAAC,EAAI,OAEP,kBAAC,IAAQ,CAACpO,GAAG,WAMjB,kBAACmJ,EAAYkF,SAAQ,CACnB5I,MAAO,CACL4D,WAAYA,EACZC,OAAQA,EACRC,MAAOA,EACPC,OAAQA,IAGV,kBAAC,IAAM,KACL,kBAAC,EAAc,MACf,8BAAOwE,MCvEfpN,IAAS0N,OAAO,kBAAC,EAAG,MAAKvN,SAASC,eAAe,Y","file":"static/js/main.495ac4d0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Avatar.css\";\r\n\r\nconst Avatar = (props) => {\r\n  return (\r\n    <div className={`avatar ${props.className}`} style={props.style}>\r\n      <img\r\n        src={props.image}\r\n        alt={props.alt}\r\n        style={{ width: props.width, height: props.width }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport \"./UserItem.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nconst UserItem = (props) => {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar\r\n              image={`your-places-app.vercel.app/${props.image}`}\r\n              alt={props.name}\r\n            />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\nimport UserItem from \"./UserItem\";\r\nimport \"./UsersList.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nconst UsersList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No Users Found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {props.items.map((user) => (\r\n        <UserItem\r\n          key={user.id}\r\n          id={user.id}\r\n          image={user.image}\r\n          name={user.name}\r\n          placeCount={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default UsersList;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./Backdrop.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById(\"backdrop-hook\")\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || \"default\"} ${\r\n          props.inverse && \"button--inverse\"\r\n        } ${props.danger && \"button--danger\"}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || \"default\"} ${\r\n          props.inverse && \"button--inverse\"\r\n        } ${props.danger && \"button--danger\"}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || \"default\"} ${\r\n        props.inverse && \"button--inverse\"\r\n      } ${props.danger && \"button--danger\"}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport Modal from \"./Modal\";\r\nimport Button from \"../FormElements/Button\";\r\n\r\nconst ErrorModal = (props) => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from \"react\";\r\n\r\nimport \"./LoadingSpinner.css\";\r\n\r\nconst LoadingSpinner = (props) => {\r\n  return (\r\n    <div className={`${props.asOverlay && \"loading-spinner__overlay\"}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method: method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        // if (!response.ok) {\r\n        //   throw new Error(responseData.message);\r\n        // }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UsersList from \"../components/UsersList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nconst Users = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setIsLoadedUsers] = useState();\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"your-places-app.vercel.app/api/users/\",\r\n          \"GET\"\r\n        );\r\n        setIsLoadedUsers(responseData.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />};\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\": {\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./ImageUpload.css\";\r\nimport Button from \"./Button\";\r\nconst ImageUpload = (props) => {\r\n  const [file, sendFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      sendFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImagehandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick up an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImagehandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const InputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, InputHandler, setFormData];\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React, { useContext } from \"react\";\r\nimport \"./PlaceForm.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, InputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n  const history = useHistory();\r\n  const placeSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n      formData.append(\"creator\", auth.userId);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      await sendRequest(\r\n        \"your-places-app.vercel.app/api/places/\",\r\n        \"POST\",\r\n        formData\r\n      );\r\n      //redirect the user to a different page\r\n      history.push(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please Enter a valid title.\"\r\n          onInput={InputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please Enter a valid description (atleast 5 characters).\"\r\n          onInput={InputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address.\"\r\n          onInput={InputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={InputHandler}\r\n          errorText=\"please Provide an image.\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport \"./Map.css\";\r\nconst Map = (props) => {\r\n  const mapRef = useRef();\r\n\r\n  const { center, zoom } = props;\r\n\r\n  useEffect(() => {\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      center: center,\r\n      zoom: zoom,\r\n    });\r\n\r\n    new window.google.maps.Marker({ position: center, map: map });\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport \"./PlaceItem.css\";\r\n\r\nconst PlaceItem = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        `your-places-app.vercel.app/api/places/${props.id}`,\r\n        \"DELETE\"\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`your-places-app.vercel.app/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport \"./PlaceList.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nconst PlaceList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No Places Found. Maybe create One</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `your-places-app.vercel.app/api/places/user/${userId}`,\r\n          \"GET\"\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeletedHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../../shared/util/validators\";\r\nimport \"./PlaceForm.css\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\n\r\nconst UpdatePlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlace, setLoadedPlace] = useState();\r\n\r\n  const placeId = useParams().placeId;\r\n  const history = useHistory();\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchPlace = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `your-places-app.vercel.app/api/places/${placeId}`\r\n        );\r\n        setLoadedPlace(responseData.place);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.place.title,\r\n              isValid: true,\r\n            },\r\n            description: {\r\n              value: responseData.place.description,\r\n              isValid: true,\r\n            },\r\n          },\r\n          true\r\n        );\r\n      } catch (err) {}\r\n    };\r\n    fetchPlace();\r\n  }, [sendRequest, placeId, setFormData]);\r\n\r\n  const placeUpdateSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        `your-places-app.vercel.app/api/places/${placeId}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      history.push(\"/\" + auth.userId + \"/places\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedPlace && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find Place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && loadedPlace && (\r\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title.\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.title}\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid description (min. 5 characters).\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.description}\r\n            initialValid={true}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            UPDATE PLACE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport \"./Auth.css\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"your-places-app.vercel.app/api/users/login\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        auth.login(responseData.user.id);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n\r\n        const responseData = await sendRequest(\r\n          \"your-places-app.vercel.app/api/users/signup\",\r\n          \"POST\",\r\n          formData\r\n        );\r\n\r\n        auth.login(responseData.user.id);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>{!isLoginMode ? \"SignUp required\" : \"Login Required\"}</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && (\r\n            <ImageUpload\r\n              center\r\n              id=\"image\"\r\n              onInput={inputHandler}\r\n              errorText=\"please Provide an image.\"\r\n            />\r\n          )}\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, at least 5 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\n\r\nimport \"./MainHeader.css\";\r\n\r\nconst MainHeader = (props) => {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./NavLinks.css\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nconst NavLinks = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>LOGOUT</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./SideDrawer.css\";\r\n\r\nconst SideDrawer = (props) => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from \"../UIElements/Backdrop\";\r\nimport \"./MainNavigation.css\";\r\n\r\nconst MainNavigation = (props) => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true);\r\n  };\r\n\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n\r\n      <MainHeader>\r\n        <button\r\n          className=\"main-navigation__menu-btn\"\r\n          onClick={openDrawerHandler}\r\n        >\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">YourPlaces</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, { useState, useCallback } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Users from \"./user/pages/Users\";\nimport NewPlace from \"./places/pages/NewPlace\";\nimport UserPlaces from \"./places/pages/UserPlaces\";\nimport UpdatePlace from \"./places/pages/UpdatePlace\";\nimport Auth from \"./user/pages/Auth\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport { AuthContext } from \"./shared/context/auth-context\";\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid) => {\n    setIsLoggedIn(true);\n    setUserId(uid);\n  }, []);\n\n  const logout = useCallback(() => {\n    setIsLoggedIn(false);\n    setUserId(null);\n  }, []);\n\n  let routes;\n\n  if (isLoggedIn) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: isLoggedIn,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}